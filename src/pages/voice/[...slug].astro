---
import { getCollection, getEntry } from 'astro:content';
import { SITE_NAME } from '@lib/constants';

import GlobalLayout from '@layouts/GlobalLayout.astro';
import TopBar from '@components/voice/TopBar.astro';
import TagList from '@components/general/TagList.astro';
import SnsShare from '@components/voice/SnsShare.astro';
import CreatedDate from '@components/voice/CreatedDate.astro';
import YTInfoBox from '@components/voice/YTInfoBox.astro';
import { LinkButton } from '@components/general/LinkButton';

import { processVoice } from '@lib/processVoice';

export async function getStaticPaths() {
  const voiceEntries = await getCollection('voice');
  return voiceEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const tagList = entry.data.tag
  ? await Promise.all(
      entry.data.tag.map(async (tag) => {
        const tagEntry = await getEntry(tag.collection, tag.id);
        return tagEntry;
      }),
    )
  : undefined;

await processVoice(entry);
---

<GlobalLayout
  title={`${entry.data.text} | ボタン詳細 | ${SITE_NAME}`}
  description={`「${SITE_NAME}」で収録しているヰ世界情緒さんの台詞「${entry.data.text}」についての詳細ページです。`}
  ogImage={`/voice/ogp/${entry.slug}.png`}
>
  <TopBar voice={entry} slot="before-main" />

  <Fragment>
    <CreatedDate slug={entry.slug} />
    <div class="flex flex-col justify-between gap-2 pb-10 md:flex-row">
      <div>{tagList && <TagList tagList={tagList} ver="voice" />}</div>
      <div class="self-end">
        <SnsShare />
      </div>
    </div>
    <YTInfoBox voice={entry} />
    <LinkButton href="/">他のボタンへ</LinkButton>
  </Fragment>
</GlobalLayout>
